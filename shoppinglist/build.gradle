plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Data REST 의존성 추가 영역(mvn -> )
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// 여기에 기본적으로 Jackson 라이브러리 포함(JSON으로 바꿔주는 라이브러리)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring Security  의존성 관련
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.boot:spring-boot-starter-security'

	//jjwt 의존성 관련 설정
	implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'

}

tasks.named('test') {
	useJUnitPlatform()
}
